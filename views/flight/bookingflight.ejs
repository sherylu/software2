<%- include ../partials/banner.ejs %>


<div class="container">
    <div class="col-md-8">

        <div class="row">
            <div class="col-md-8">
                <%- include ../partials/error.ejs %>
            </div>
        </div>

            <%- include partials/client.ejs %>
            
            <% for (var i=1; i<seats; i++) { %>
                <%- include partials/passenger.ejs %>
            <% } %> 

        </div>
    </div>

    <script>
        $(document).ready(function () {
            
            $('form').on('submit', function(e) {
                  e.preventDefault();
            });
            
            var validatePassenger = function(p) {
                var errors = [];
                if (p.firstName == "") {
                    errors.push("El nombre no puede estar vacio");
                }
                if (p.lastName == "") {
                    errors.push("El apellido no puede estar vacio");
                }
                if (p.passportId == "") {
                    errors.push("El identificador no puede estar vacio");
                }
                if (isNaN(p.age) || p.age < 0 || p.age > 120) {
                    errors.push("La edad es incorrecta o fuera de rango entre 0 y 120 a√±os");
                }
                if (isNaN(p.handicap) || p < 0 || p >100) {
                    errors.push("El poercentaje de discapacidad parece ser incorrecto o fuera de rango")
                }
                return errors;
            }
            
            var validateClient = function (p) {
                var errors = validatePassenger(p);
                
                if (p.phoneNumber.match('\W*([2-9][0-8][0-9])\W*([2-9][0-9]{2})\W*([0-9]{4})(\se?x?t?(\d*))?')) {
                    errors.push("El telefono no es valido");
                }
                if (p.email == "" ) {
                    errors.push("El correo no puede estar vacio");
                }
               /* if ($('#email').val().match(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/))  {
                    errors.push("El email insertado no es valido");    
                }*/
                return errors;
            }
           
            
            

            $('#btn-booking').click(function () {
                
                var validationErrors = [];
                var clients = [];
                
                var retrieveClient = function() {
                    var client = {};
                    client.firstName = $('#firstName').val();
                    client.lastName = $('#lastName').val();
                    client.passportId = $('#identification').val();
                    client.phoneNumber = $('#phone').val();
                    client.email = $('#email').val();
                    client.age = parseInt($('#age').val());
                    client.handicap = $('#handicapped').prop('checked')? parseFloat($('#handicap')).val() : 0;
                    var errors = validateClient(client);
                    if (errors.length > 0) { validationErrors.push("Errores hallados en el cliente"); }
                    validationErrors = validationErrors.concat(errors);
                    return client;
                }
                
                var retrievePassengers = function(n) {
                    var passengers = [];
                    for (var i=1; i< <%=seats%>; i++) {
                        var passenger = {};
                        passenger.firstName = $('#firstName'+i).val();
                        passenger.lastName = $('#lastName'+i).val();
                        passenger.passportId = $('#identification'+i).val();
                        passenger.phoneNumber ="";
                        passenger.email = "";
                        passenger.age = parseInt($('#age'+i).val());
                        passenger.handicap = $('#handicapped'+i).prop('checked')? parseFloat($('#handicap'+i).val()) : 0;
                        var errors = validatePassenger(passenger);
                        if (errors.length > 2) { validationErrors.push("Errores hallados en el pasajero " +i);}
                        validationErrors = validationErrors.concat(errors);
                        passengers.push(passenger);
                    }
                    return passengers;
                }

                clients.push(retrieveClient());
                passengers = retrievePassengers(<%=seats%>);
                clients = clients.concat(passengers);

                if (validationErrors.length == 0 ) {
    
                    $.post("/flight/sendbookingmail", {
                        obj: clients,
                        reservation: [<%-'\"'+flightCodeLeaving+'\"'%> <%-flightCodeReturning == undefined? (',\"' + flightCodeReturning +'\"') : ''%>],
                        numberOfSeats: <%=seats%>
                    }, function(data) { $('body').html(data); }); 
                } else {
                    $('body > div.container > div > div.row > div > div').show();
                    var formErrors = validationErrors.map(function(e) {
                        return ("<li>"+e+"</li>");
                    });
                    $('body > div.container > div > div.row > div > div > ul').html(formErrors);
                    $('#email').focus();
                }
                
                

            });
        });
    </script>
